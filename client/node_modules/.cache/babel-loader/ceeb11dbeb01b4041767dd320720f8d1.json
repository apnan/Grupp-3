{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hanna\\\\OneDrive\\\\Desktop\\\\Firebase\\\\firebase-uppload-pictures\\\\src\\\\screens\\\\ChooseProfilePicturePage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { getDownloadURL, listAll, ref, uploadBytes } from 'firebase/storage';\nimport { v4 } from 'uuid';\nimport { storage } from '../firebase.js';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChooseProfilePicturePage = () => {\n  _s();\n\n  const [imageUpload, setImageUpload] = useState(null);\n  const [imageUrls, setImageUrls] = useState([]);\n  const imagesListRef = ref(storage, 'images/');\n\n  const uploadImage = () => {\n    if (imageUpload == null) return;\n    const imageRef = ref(storage, `images/${imageUpload.name + v4()}`);\n    /* v4 -randomized LETTERS */\n\n    uploadBytes(imageRef, imageUpload).then(snapshot => {\n      /* uploadFiles - first argument is WHERE you want to upload, second one - WHAT */\n\n      /* getDownloadURL(snapshot.ref).then((url) => {\r\n        setImageUrls((prev) => [...prev, url]);\r\n      }); */\n      alert('Image uploaded!');\n    });\n  };\n\n  useEffect(() => {\n    listAll(imagesListRef).then(response => {\n      /*   console.log(response); */\n      response.items.forEach(item => {\n        getDownloadURL(item).then(url => {\n          setImageUrls(prev => [...prev, url]);\n        });\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: event => {\n        setImageUpload(event.target.files[0]);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadImage,\n      children: \"Upload file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChooseProfilePicturePage, \"HuzKbxPMeWzezQAAjY76BDVKkII=\");\n\n_c = ChooseProfilePicturePage;\nexport default ChooseProfilePicturePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChooseProfilePicturePage\");","map":{"version":3,"names":["React","getDownloadURL","listAll","ref","uploadBytes","v4","storage","useState","useEffect","ChooseProfilePicturePage","imageUpload","setImageUpload","imageUrls","setImageUrls","imagesListRef","uploadImage","imageRef","name","then","snapshot","alert","response","items","forEach","item","url","prev","event","target","files"],"sources":["C:/Users/hanna/OneDrive/Desktop/Firebase/firebase-uppload-pictures/src/screens/ChooseProfilePicturePage.js"],"sourcesContent":["import React from 'react';\r\nimport { getDownloadURL, listAll, ref, uploadBytes } from 'firebase/storage';\r\nimport { v4 } from 'uuid';\r\nimport { storage } from '../firebase.js';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nconst ChooseProfilePicturePage = () => {\r\n  const [imageUpload, setImageUpload] = useState(null);\r\n  const [imageUrls, setImageUrls] = useState([]);\r\n  const imagesListRef = ref(storage, 'images/');\r\n\r\n  const uploadImage = () => {\r\n    if (imageUpload == null) return;\r\n    const imageRef = ref(\r\n      storage,\r\n      `images/${imageUpload.name + v4()}`\r\n    ); /* v4 -randomized LETTERS */\r\n\r\n    uploadBytes(imageRef, imageUpload).then((snapshot) => {\r\n      /* uploadFiles - first argument is WHERE you want to upload, second one - WHAT */\r\n      /* getDownloadURL(snapshot.ref).then((url) => {\r\n        setImageUrls((prev) => [...prev, url]);\r\n      }); */ alert('Image uploaded!');\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    listAll(imagesListRef).then((response) => {\r\n      /*   console.log(response); */\r\n      response.items.forEach((item) => {\r\n        getDownloadURL(item).then((url) => {\r\n          setImageUrls((prev) => [...prev, url]);\r\n        });\r\n      });\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"file\"\r\n        onChange={(event) => {\r\n          setImageUpload(event.target.files[0]);\r\n        }}\r\n      />\r\n      <button onClick={uploadImage}>Upload file</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChooseProfilePicturePage;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,OAAzB,EAAkCC,GAAlC,EAAuCC,WAAvC,QAA0D,kBAA1D;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,wBAAwB,GAAG,MAAM;EAAA;;EACrC,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,IAAD,CAA9C;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAMO,aAAa,GAAGX,GAAG,CAACG,OAAD,EAAU,SAAV,CAAzB;;EAEA,MAAMS,WAAW,GAAG,MAAM;IACxB,IAAIL,WAAW,IAAI,IAAnB,EAAyB;IACzB,MAAMM,QAAQ,GAAGb,GAAG,CAClBG,OADkB,EAEjB,UAASI,WAAW,CAACO,IAAZ,GAAmBZ,EAAE,EAAG,EAFhB,CAApB;IAGG;;IAEHD,WAAW,CAACY,QAAD,EAAWN,WAAX,CAAX,CAAmCQ,IAAnC,CAAyCC,QAAD,IAAc;MACpD;;MACA;AACN;AACA;MAAaC,KAAK,CAAC,iBAAD,CAAL;IACR,CALD;EAMD,CAbD;;EAcAZ,SAAS,CAAC,MAAM;IACdN,OAAO,CAACY,aAAD,CAAP,CAAuBI,IAAvB,CAA6BG,QAAD,IAAc;MACxC;MACAA,QAAQ,CAACC,KAAT,CAAeC,OAAf,CAAwBC,IAAD,IAAU;QAC/BvB,cAAc,CAACuB,IAAD,CAAd,CAAqBN,IAArB,CAA2BO,GAAD,IAAS;UACjCZ,YAAY,CAAEa,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUD,GAAV,CAAX,CAAZ;QACD,CAFD;MAGD,CAJD;IAKD,CAPD;EAQD,CATQ,EASN,EATM,CAAT;EAUA,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,MADP;MAEE,QAAQ,EAAGE,KAAD,IAAW;QACnBhB,cAAc,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAd;MACD;IAJH;MAAA;MAAA;MAAA;IAAA,QADF,eAOE;MAAQ,OAAO,EAAEd,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAxCD;;GAAMN,wB;;KAAAA,wB;AA0CN,eAAeA,wBAAf"},"metadata":{},"sourceType":"module"}