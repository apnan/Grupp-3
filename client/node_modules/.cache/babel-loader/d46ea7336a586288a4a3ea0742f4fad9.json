{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hanna\\\\OneDrive\\\\Desktop\\\\Firebase\\\\firebase-uppload-pictures\\\\src\\\\screens\\\\ChooseProfilePicturePage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { getDownloadURL, listAll, ref, uploadBytes } from 'firebase/storage';\nimport { v4 } from 'uuid';\nimport { storage } from '../firebase.js';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Modal from 'react-modal';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChooseProfilePicturePage = () => {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const [imageUpload, setImageUpload] = useState(null);\n  const [imageUrls, setImageUrls] = useState([]);\n  const imagesListRef = ref(storage, 'images/');\n\n  const uploadImage = () => {\n    if (imageUpload == null) return;\n    const imageRef = ref(storage, `images/${imageUpload.name + v4()}`);\n    /* v4 -randomized LETTERS */\n\n    uploadBytes(imageRef, imageUpload).then(snapshot => {\n      /* uploadFiles - first argument is WHERE you want to upload, second one - WHAT */\n      getDownloadURL(snapshot.ref).then(url => {\n        setImageUrls(prev => [...prev, url]);\n      });\n    });\n  };\n\n  useEffect(() => {\n    listAll(imagesListRef).then(response => {\n      response.items.forEach(item => {\n        getDownloadURL(item).then(url => {\n          setImageUrls(prev => [...prev, url]);\n        });\n      });\n    });\n  }, []);\n  /* ********************************************************************************************* */\n\n  const [morePictures, setMorePictures] = useState(false);\n  const moreImagesListRef = ref(storage, 'moreImages/');\n  const [moreImageUpload, setMoreImageUpload] = useState(null);\n  const [moreImageUrls, setMoreImageUrls] = useState([]);\n\n  const uploadMoreImages = () => {\n    setMorePictures(true);\n    listAll(moreImagesListRef).then(response => {\n      response.items.forEach(item => {\n        getDownloadURL(item).then(url => {\n          setImageUrls(prev => [...prev, url]);\n        });\n      });\n    });\n  };\n\n  const uploadMoreImage = () => {\n    if (moreImageUpload == null) return;\n    const moreImageRef = ref(storage, `moreImages/${moreImageUpload.name + v4()}`);\n    /* v4 -randomized LETTERS */\n\n    uploadBytes(moreImageRef, moreImageUpload).then(snapshot => {\n      /* uploadFiles - first argument is WHERE you want to upload, second one - WHAT */\n      getDownloadURL(snapshot.ref).then(url => {\n        setMoreImageUrls(prev => [...prev, url]);\n      });\n    });\n  };\n  /* ************************************************************************************************ */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"h1-text\",\n      children: \"Choose a profile picture:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profilePictures\",\n      children: [imageUrls.map(url => {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            /* ?????????????????????  */\n            src: url,\n            alt: \"firebase\",\n            className: \"profilePicture\"\n          }, url, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this);\n      }), !morePictures ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"moreProfilePicturesBtn\",\n        onClick: uploadMoreImages,\n        children: \"More profile pictures\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: moreImageUrls.map(url => {\n          return /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              /* ?????????????????????  */\n              src: url,\n              alt: \"firebase\",\n              className: \"profilePicture\"\n            }, url, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleOpen,\n              children: \"Open modal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-title\",\n          variant: \"h6\",\n          component: \"h2\",\n          children: \"Text in a modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-description\",\n          sx: {\n            mt: 2\n          },\n          children: \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"h3-text\",\n      children: \"Or download your own:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"downloadingField\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: event => {\n          setImageUpload(event.target.files[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadImage,\n        children: \"Upload file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChooseProfilePicturePage, \"2nWti/oB0AMs+T4PkO6sThITYZI=\");\n\n_c = ChooseProfilePicturePage;\nexport default ChooseProfilePicturePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChooseProfilePicturePage\");","map":{"version":3,"names":["React","getDownloadURL","listAll","ref","uploadBytes","v4","storage","useState","useEffect","Modal","Box","Button","Typography","ChooseProfilePicturePage","open","setOpen","handleOpen","handleClose","imageUpload","setImageUpload","imageUrls","setImageUrls","imagesListRef","uploadImage","imageRef","name","then","snapshot","url","prev","response","items","forEach","item","morePictures","setMorePictures","moreImagesListRef","moreImageUpload","setMoreImageUpload","moreImageUrls","setMoreImageUrls","uploadMoreImages","uploadMoreImage","moreImageRef","map","mt","event","target","files"],"sources":["C:/Users/hanna/OneDrive/Desktop/Firebase/firebase-uppload-pictures/src/screens/ChooseProfilePicturePage.js"],"sourcesContent":["import React from 'react';\r\nimport { getDownloadURL, listAll, ref, uploadBytes } from 'firebase/storage';\r\nimport { v4 } from 'uuid';\r\nimport { storage } from '../firebase.js';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst ChooseProfilePicturePage = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const [imageUpload, setImageUpload] = useState(null);\r\n  const [imageUrls, setImageUrls] = useState([]);\r\n  const imagesListRef = ref(storage, 'images/');\r\n\r\n  const uploadImage = () => {\r\n    if (imageUpload == null) return;\r\n    const imageRef = ref(\r\n      storage,\r\n      `images/${imageUpload.name + v4()}`\r\n    ); /* v4 -randomized LETTERS */\r\n\r\n    uploadBytes(imageRef, imageUpload).then((snapshot) => {\r\n      /* uploadFiles - first argument is WHERE you want to upload, second one - WHAT */\r\n      getDownloadURL(snapshot.ref).then((url) => {\r\n        setImageUrls((prev) => [...prev, url]);\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    listAll(imagesListRef).then((response) => {\r\n      response.items.forEach((item) => {\r\n        getDownloadURL(item).then((url) => {\r\n          setImageUrls((prev) => [...prev, url]);\r\n        });\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  /* ********************************************************************************************* */\r\n  const [morePictures, setMorePictures] = useState(false);\r\n  const moreImagesListRef = ref(storage, 'moreImages/');\r\n  const [moreImageUpload, setMoreImageUpload] = useState(null);\r\n  const [moreImageUrls, setMoreImageUrls] = useState([]);\r\n\r\n  const uploadMoreImages = () => {\r\n    setMorePictures(true);\r\n    listAll(moreImagesListRef).then((response) => {\r\n      response.items.forEach((item) => {\r\n        getDownloadURL(item).then((url) => {\r\n          setImageUrls((prev) => [...prev, url]);\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  const uploadMoreImage = () => {\r\n    if (moreImageUpload == null) return;\r\n    const moreImageRef = ref(\r\n      storage,\r\n      `moreImages/${moreImageUpload.name + v4()}`\r\n    ); /* v4 -randomized LETTERS */\r\n\r\n    uploadBytes(moreImageRef, moreImageUpload).then((snapshot) => {\r\n      /* uploadFiles - first argument is WHERE you want to upload, second one - WHAT */\r\n      getDownloadURL(snapshot.ref).then((url) => {\r\n        setMoreImageUrls((prev) => [...prev, url]);\r\n      });\r\n    });\r\n  };\r\n\r\n  /* ************************************************************************************************ */\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"h1-text\">Choose a profile picture:</h1>\r\n      <div className=\"profilePictures\">\r\n        {imageUrls.map((url) => {\r\n          return (\r\n            <a href=\"#\">\r\n              <img\r\n                key={url} /* ?????????????????????  */\r\n                src={url}\r\n                alt=\"firebase\"\r\n                className=\"profilePicture\"\r\n              />\r\n            </a>\r\n          );\r\n        })}\r\n        {!morePictures ? (\r\n          <button className=\"moreProfilePicturesBtn\" onClick={uploadMoreImages}>\r\n            More profile pictures\r\n          </button>\r\n        ) : (\r\n          <div>\r\n            {moreImageUrls.map((url) => {\r\n              return (\r\n                <a href=\"#\">\r\n                  <img\r\n                    key={url} /* ?????????????????????  */\r\n                    src={url}\r\n                    alt=\"firebase\"\r\n                    className=\"profilePicture\"\r\n                  />\r\n                  <Button onClick={handleOpen}>Open modal</Button>\r\n                </a>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            Text in a modal\r\n          </Typography>\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n      <h3 className=\"h3-text\">Or download your own:</h3>\r\n      <div className=\"downloadingField\">\r\n        <input\r\n          type=\"file\"\r\n          onChange={(event) => {\r\n            setImageUpload(event.target.files[0]);\r\n          }}\r\n        />\r\n        <button onClick={uploadImage}>Upload file</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChooseProfilePicturePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}