[{"/Users/houriehtaheri/Grupp-3-frontend-1/src/index.js":"1","/Users/houriehtaheri/Grupp-3-frontend-1/src/App.js":"2","/Users/houriehtaheri/Grupp-3-frontend-1/src/reportWebVitals.js":"3","/Users/houriehtaheri/Grupp-3-frontend-1/src/components/ChooseProfilePicturePage.js":"4","/Users/houriehtaheri/Grupp-3-frontend-1/src/components/Login.js":"5","/Users/houriehtaheri/Grupp-3-frontend-1/src/components/Dashboard.js":"6","/Users/houriehtaheri/Grupp-3-frontend-1/src/firebase.js":"7","/Users/houriehtaheri/Grupp-3-frontend-1/src/components/Gameapp.js":"8","/Users/houriehtaheri/Grupp-3-frontend-1/src/components/ScoreBoard.js":"9","/Users/houriehtaheri/Grupp-3-frontend-1/src/components/Modal.js":"10","/Users/houriehtaheri/Grupp-3-frontend-1/src/components/Navbar.js":"11","/Users/houriehtaheri/Grupp-3-frontend-1/src/components/Profile.js":"12","/Users/houriehtaheri/Grupp-3-frontend-1/src/components/Register.js":"13","/Users/houriehtaheri/Grupp-3-frontend-1/src/components/context/ProtectedRoutes.js":"14"},{"size":530,"mtime":1661937845977,"results":"15","hashOfConfig":"16"},{"size":895,"mtime":1662456286578,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1661937845977,"results":"18","hashOfConfig":"16"},{"size":3948,"mtime":1662019786512,"results":"19","hashOfConfig":"16"},{"size":2133,"mtime":1662456286579,"results":"20","hashOfConfig":"16"},{"size":118,"mtime":1661937845977,"results":"21","hashOfConfig":"16"},{"size":756,"mtime":1661937845977,"results":"22","hashOfConfig":"16"},{"size":7492,"mtime":1662024036817,"results":"23","hashOfConfig":"16"},{"size":109,"mtime":1661938432244,"results":"24","hashOfConfig":"16"},{"size":446,"mtime":1662019786513,"results":"25","hashOfConfig":"16"},{"size":542,"mtime":1662456286580,"results":"26","hashOfConfig":"16"},{"size":599,"mtime":1662456286580,"results":"27","hashOfConfig":"16"},{"size":1711,"mtime":1662456286581,"results":"28","hashOfConfig":"16"},{"size":461,"mtime":1662456286581,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8xd62o",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/houriehtaheri/Grupp-3-frontend-1/src/index.js",[],[],"/Users/houriehtaheri/Grupp-3-frontend-1/src/App.js",[],[],"/Users/houriehtaheri/Grupp-3-frontend-1/src/reportWebVitals.js",[],[],"/Users/houriehtaheri/Grupp-3-frontend-1/src/components/ChooseProfilePicturePage.js",["74","75","76"],[],"import React from 'react';\nimport { getDownloadURL, listAll, ref, uploadBytes } from 'firebase/storage';\nimport { v4 } from 'uuid';\nimport { storage } from '../firebase.js';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Modal from './Modal.js';\nimport Fade from 'react-reveal/Fade';\n\nconst ChooseProfilePicturePage = () => {\n  const [open, setOpen] = useState(false);\n  const toggleModal = () => {\n    if (open === false) {\n      setOpen(true);\n    } else {\n      setOpen(false);\n    }\n  };\n\n  const [imageUpload, setImageUpload] = useState(null);\n  const [imageUrls, setImageUrls] = useState([]);\n  const imagesListRef = ref(storage, 'images/');\n\n  const uploadImage = () => {\n    if (imageUpload == null) return;\n    const imageRef = ref(storage, `images/${imageUpload.name + v4()}`);\n\n    uploadBytes(imageRef, imageUpload).then((snapshot) => {\n      /* uploadFiles - first argument is WHERE you want to upload, second one - WHAT */\n      getDownloadURL(snapshot.ref).then((url) => {\n        setImageUrls((prev) => [...prev, url]);\n      });\n    });\n  };\n\n  useEffect(() => {\n    listAll(imagesListRef).then((response) => {\n      response.items.forEach((item) => {\n        getDownloadURL(item).then((url) => {\n          setImageUrls((prev) => [...prev, url]);\n        });\n      });\n    });\n  }, []);\n\n  const [morePictures, setMorePictures] = useState(false);\n  const moreImagesListRef = ref(storage, 'moreImages/');\n  const [moreImageUpload, setMoreImageUpload] = useState(null);\n  const [moreImageUrls, setMoreImageUrls] = useState([]);\n  const [modalData, setModalData] = useState(null);\n\n  const uploadMoreImages = () => {\n    setMorePictures(true);\n    listAll(moreImagesListRef).then((response) => {\n      response.items.forEach((item) => {\n        getDownloadURL(item).then((url) => {\n          setImageUrls((prev) => [...prev, url]);\n        });\n      });\n    });\n  };\n\n  const uploadMoreImage = () => {\n    if (moreImageUpload == null) return;\n    const moreImageRef = ref(\n      storage,\n      `moreImages/${moreImageUpload.name + v4()}`\n    );\n\n    uploadBytes(moreImageRef, moreImageUpload).then((snapshot) => {\n      /* uploadFiles - first argument is WHERE you want to upload, second one - WHAT */\n      getDownloadURL(snapshot.ref).then((url) => {\n        setMoreImageUrls((prev) => [...prev, url]);\n      });\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"h1-text\">Choose a profile picture:</h1>\n      <div className=\"profilePictures\">\n        {imageUrls.map((url) => {\n          console.log(url);\n          return (\n            <Fade bottom cascade className=\"fade-container\" key={url}>\n              <img\n                onClick={() => {\n                  toggleModal();\n                  setModalData(url);\n                }}\n                src={url}\n                alt=\"firebase\"\n                className=\"profilePicture\"\n              />\n            </Fade>\n          );\n        })}\n        {open && <Modal modalData={modalData} handleClose={toggleModal} />}\n      </div>\n      <div className=\"morePictures\">\n        {!morePictures ? (\n          <button onClick={uploadMoreImages}>More profile pictures</button>\n        ) : (\n          <div>\n            {moreImageUrls.map((url) => {\n              return (\n                <img\n                  key={url} /* ?????????????????????  */\n                  src={url}\n                  alt=\"firebase\"\n                  className=\"profilePicture\"\n                />\n              );\n            })}\n          </div>\n        )}\n      </div>\n      <h3 className=\"h3-text\">Or download your own:</h3>\n      <div className=\"downloadingField\">\n        <input\n          type=\"file\"\n          onChange={(event) => {\n            setImageUpload(event.target.files[0]);\n          }}\n        />\n        <button onClick={uploadImage}>Upload file</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChooseProfilePicturePage;\n","/Users/houriehtaheri/Grupp-3-frontend-1/src/components/Login.js",["77","78","79","80"],[],"/Users/houriehtaheri/Grupp-3-frontend-1/src/components/Dashboard.js",[],[],"/Users/houriehtaheri/Grupp-3-frontend-1/src/firebase.js",[],[],"/Users/houriehtaheri/Grupp-3-frontend-1/src/components/Gameapp.js",["81","82","83","84","85"],[],"import {useEffect, useState} from 'react'\nimport ScoreBoard from '../components/ScoreBoard'\nimport blueCandy from './images/blue-candy.png'\nimport greenCandy from './images/green-candy.png'\nimport orangeCandy from './images/orange-candy.png'\nimport purpleCandy from './images/purple-candy.png'\nimport redCandy from './images/red-candy.png'\nimport yellowCandy from './images/yellow-candy.png'\nimport blank from './images/blank.png'\nimport \"./gameapp.css\";\n\nconst width = 8\nconst candyColors = [\n    blueCandy,\n    orangeCandy,\n    purpleCandy,\n    redCandy,\n    yellowCandy,\n    greenCandy\n]\n\nconst App = () => {\n    const [currentColorArrangement, setCurrentColorArrangement] = useState([])\n    const [squareBeingDragged, setSquareBeingDragged] = useState(null)\n    const [squareBeingReplaced, setSquareBeingReplaced] = useState(null)\n    const [scoreDisplay, setScoreDisplay] = useState(0)\n\n    const checkForColumnOfFour = () => {\n        for (let i = 0; i <= 39; i++) {\n            const columnOfFour = [i, i + width, i + width * 2, i + width * 3]\n            const decidedColor = currentColorArrangement[i]\n            const isBlank = currentColorArrangement[i] === blank\n\n            if (columnOfFour.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n                setScoreDisplay((score) => score + 4)\n                columnOfFour.forEach(square => currentColorArrangement[square] = blank)\n                return true\n            }\n        }\n    }\n\n    const checkForRowOfFour = () => {\n        for (let i = 0; i < 64; i++) {\n            const rowOfFour = [i, i + 1, i + 2, i + 3,i + 4]\n            const decidedColor = currentColorArrangement[i]\n            const notValid = [5, 6, 7, 13, 14, 15, 21, 22, 23, 29, 30, 31, 37, 38, 39, 45, 46, 47, 53, 54, 55, 62, 63, 64]\n            const isBlank = currentColorArrangement[i] === blank\n\n            if (notValid.includes(i)) continue\n\n            if (rowOfFour.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n                setScoreDisplay((score) => score + 4)\n                rowOfFour.forEach(square => currentColorArrangement[square] = blank)\n                return true\n            }\n        }\n    }\n\n    const checkForColumnOfThree = () => {\n        for (let i = 0; i <= 47; i++) {\n            const columnOfThree = [i, i + width, i + width * 2]\n            const decidedColor = currentColorArrangement[i]\n            const isBlank = currentColorArrangement[i] === blank\n\n            if (columnOfThree.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n                setScoreDisplay((score) => score + 3)\n                columnOfThree.forEach(square => currentColorArrangement[square] = blank)\n                return true\n            }\n        }\n    }\n\n    const checkForRowOfThree = () => {\n        for (let i = 0; i < 64; i++) {\n            const rowOfThree = [i, i + 1, i + 2]\n            const decidedColor = currentColorArrangement[i]\n            const notValid = [6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55, 63, 64]\n            const isBlank = currentColorArrangement[i] === blank\n\n            if (notValid.includes(i)) continue\n\n            if (rowOfThree.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n                setScoreDisplay((score) => score + 3)\n                rowOfThree.forEach(square => currentColorArrangement[square] = blank)\n                return true\n            }\n        }\n    }\n\n    const moveIntoSquareBelow = () => {\n        for (let i = 0; i <= 55; i++) {\n            const firstRow = [0, 1, 2, 3, 4, 5, 6, 7]\n            const isFirstRow = firstRow.includes(i)\n\n            if (isFirstRow && currentColorArrangement[i] === blank) {\n                let randomNumber = Math.floor(Math.random() * candyColors.length)\n                currentColorArrangement[i] = candyColors[randomNumber]\n            }\n\n            if ((currentColorArrangement[i + width]) === blank) {\n                currentColorArrangement[i + width] = currentColorArrangement[i]\n                currentColorArrangement[i] = blank\n            }\n        }\n    }\n\n    const dragStart = (e) => {\n        setSquareBeingDragged(e.target)\n    }\n    const dragDrop = (e) => {\n        setSquareBeingReplaced(e.target)\n    }\n    const dragEnd = () => {\n        const squareBeingDraggedId = parseInt(squareBeingDragged.getAttribute('data-id'))\n        const squareBeingReplacedId = parseInt(squareBeingReplaced.getAttribute('data-id'))\n\n        currentColorArrangement[squareBeingReplacedId] = squareBeingDragged.getAttribute('src')\n        currentColorArrangement[squareBeingDraggedId] = squareBeingReplaced.getAttribute('src')\n\n        const validMoves = [\n            squareBeingDraggedId - 1,\n            squareBeingDraggedId - width,\n            squareBeingDraggedId + 1,\n            squareBeingDraggedId + width\n        ]\n\n        const validMove = validMoves.includes(squareBeingReplacedId)\n\n        const isAColumnOfFour = checkForColumnOfFour()\n        const isARowOfFour = checkForRowOfFour()\n        const isAColumnOfThree = checkForColumnOfThree()\n        const isARowOfThree = checkForRowOfThree()\n\n        if (squareBeingReplacedId &&\n            validMove &&\n            (isARowOfThree || isARowOfFour || isAColumnOfFour || isAColumnOfThree)) {\n            setSquareBeingDragged(null)\n            setSquareBeingReplaced(null)\n        } else {\n            currentColorArrangement[squareBeingReplacedId] = squareBeingReplaced.getAttribute('src')\n            currentColorArrangement[squareBeingDraggedId] = squareBeingDragged.getAttribute('src')\n            setCurrentColorArrangement([...currentColorArrangement])\n        }\n    }\n\n\n    const createBoard = () => {\n        const randomColorArrangement = []\n        for (let i = 0; i < width * width; i++) {\n            const randomColor = candyColors[Math.floor(Math.random() * candyColors.length)]\n            randomColorArrangement.push(randomColor)\n        }\n        setCurrentColorArrangement(randomColorArrangement)\n    }\n\n    useEffect(() => {\n        createBoard()\n    }, [])\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            checkForColumnOfFour()\n            checkForRowOfFour()\n            checkForColumnOfThree()\n            checkForRowOfThree()\n            moveIntoSquareBelow()\n            setCurrentColorArrangement([...currentColorArrangement])\n        }, 100)\n        return () => clearInterval(timer)\n    }, [checkForColumnOfFour, checkForRowOfFour, checkForColumnOfThree, checkForRowOfThree, moveIntoSquareBelow, currentColorArrangement])\n\n\n    return (\n        <div className=\"app\">\n            <div className=\"game\">\n                {currentColorArrangement.map((candyColor, index) => (\n                    <img\n                        key={index}\n                        src={candyColor}\n                        alt={candyColor}\n                        data-id={index}\n                        draggable={true}\n                        onDragStart={dragStart}\n                        onDragOver={(e) => e.preventDefault()}\n                        onDragEnter={(e) => e.preventDefault()}\n                        onDragLeave={(e) => e.preventDefault()}\n                        onDrop={dragDrop}\n                        onDragEnd={dragEnd}\n                    />\n                ))}\n            </div>\n            <ScoreBoard score={scoreDisplay}/>\n        </div>\n    )\n}\n\nexport default App ;","/Users/houriehtaheri/Grupp-3-frontend-1/src/components/ScoreBoard.js",[],[],"/Users/houriehtaheri/Grupp-3-frontend-1/src/components/Modal.js",[],[],"/Users/houriehtaheri/Grupp-3-frontend-1/src/components/Navbar.js",[],[],"/Users/houriehtaheri/Grupp-3-frontend-1/src/components/Profile.js",[],[],"/Users/houriehtaheri/Grupp-3-frontend-1/src/components/Register.js",[],[],"/Users/houriehtaheri/Grupp-3-frontend-1/src/components/context/ProtectedRoutes.js",[],[],{"ruleId":"86","severity":1,"message":"87","line":44,"column":6,"nodeType":"88","endLine":44,"endColumn":8,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":48,"column":27,"nodeType":"92","messageId":"93","endLine":48,"endColumn":45},{"ruleId":"90","severity":1,"message":"94","line":63,"column":9,"nodeType":"92","messageId":"93","endLine":63,"endColumn":24},{"ruleId":"90","severity":1,"message":"95","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":13},{"ruleId":"90","severity":1,"message":"96","line":11,"column":10,"nodeType":"92","messageId":"93","endLine":11,"endColumn":15},{"ruleId":"90","severity":1,"message":"97","line":12,"column":10,"nodeType":"92","messageId":"93","endLine":12,"endColumn":17},{"ruleId":"90","severity":1,"message":"98","line":16,"column":13,"nodeType":"92","messageId":"93","endLine":16,"endColumn":19},{"ruleId":"86","severity":1,"message":"99","line":28,"column":11,"nodeType":"100","endLine":40,"endColumn":6,"suggestions":"101"},{"ruleId":"86","severity":1,"message":"102","line":42,"column":11,"nodeType":"100","endLine":57,"endColumn":6,"suggestions":"103"},{"ruleId":"86","severity":1,"message":"104","line":59,"column":11,"nodeType":"100","endLine":71,"endColumn":6,"suggestions":"105"},{"ruleId":"86","severity":1,"message":"106","line":73,"column":11,"nodeType":"100","endLine":88,"endColumn":6,"suggestions":"107"},{"ruleId":"86","severity":1,"message":"108","line":90,"column":11,"nodeType":"100","endLine":105,"endColumn":6},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'imagesListRef'. Either include it or remove the dependency array.","ArrayExpression",["109"],"no-unused-vars","'setMoreImageUpload' is assigned a value but never used.","Identifier","unusedVar","'uploadMoreImage' is assigned a value but never used.","'axios' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'config' is assigned a value but never used.","The 'checkForColumnOfFour' function makes the dependencies of useEffect Hook (at line 170) change on every render. To fix this, wrap the definition of 'checkForColumnOfFour' in its own useCallback() Hook.","VariableDeclarator",["110"],"The 'checkForRowOfFour' function makes the dependencies of useEffect Hook (at line 170) change on every render. To fix this, wrap the definition of 'checkForRowOfFour' in its own useCallback() Hook.",["111"],"The 'checkForColumnOfThree' function makes the dependencies of useEffect Hook (at line 170) change on every render. To fix this, wrap the definition of 'checkForColumnOfThree' in its own useCallback() Hook.",["112"],"The 'checkForRowOfThree' function makes the dependencies of useEffect Hook (at line 170) change on every render. To fix this, wrap the definition of 'checkForRowOfThree' in its own useCallback() Hook.",["113"],"The 'moveIntoSquareBelow' function makes the dependencies of useEffect Hook (at line 170) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'moveIntoSquareBelow' in its own useCallback() Hook.",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [imagesListRef]",{"range":"124","text":"125"},"Wrap the definition of 'checkForColumnOfFour' in its own useCallback() Hook.",{"range":"126","text":"127"},"Wrap the definition of 'checkForRowOfFour' in its own useCallback() Hook.",{"range":"128","text":"129"},"Wrap the definition of 'checkForColumnOfThree' in its own useCallback() Hook.",{"range":"130","text":"131"},"Wrap the definition of 'checkForRowOfThree' in its own useCallback() Hook.",{"range":"132","text":"133"},[1328,1330],"[imagesListRef]",[925,1486],"useCallback(() => {\n        for (let i = 0; i <= 39; i++) {\n            const columnOfFour = [i, i + width, i + width * 2, i + width * 3]\n            const decidedColor = currentColorArrangement[i]\n            const isBlank = currentColorArrangement[i] === blank\n\n            if (columnOfFour.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n                setScoreDisplay((score) => score + 4)\n                columnOfFour.forEach(square => currentColorArrangement[square] = blank)\n                return true\n            }\n        }\n    })",[1518,2226],"useCallback(() => {\n        for (let i = 0; i < 64; i++) {\n            const rowOfFour = [i, i + 1, i + 2, i + 3,i + 4]\n            const decidedColor = currentColorArrangement[i]\n            const notValid = [5, 6, 7, 13, 14, 15, 21, 22, 23, 29, 30, 31, 37, 38, 39, 45, 46, 47, 53, 54, 55, 62, 63, 64]\n            const isBlank = currentColorArrangement[i] === blank\n\n            if (notValid.includes(i)) continue\n\n            if (rowOfFour.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n                setScoreDisplay((score) => score + 4)\n                rowOfFour.forEach(square => currentColorArrangement[square] = blank)\n                return true\n            }\n        }\n    })",[2262,2811],"useCallback(() => {\n        for (let i = 0; i <= 47; i++) {\n            const columnOfThree = [i, i + width, i + width * 2]\n            const decidedColor = currentColorArrangement[i]\n            const isBlank = currentColorArrangement[i] === blank\n\n            if (columnOfThree.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n                setScoreDisplay((score) => score + 3)\n                columnOfThree.forEach(square => currentColorArrangement[square] = blank)\n                return true\n            }\n        }\n    })",[2844,3511],"useCallback(() => {\n        for (let i = 0; i < 64; i++) {\n            const rowOfThree = [i, i + 1, i + 2]\n            const decidedColor = currentColorArrangement[i]\n            const notValid = [6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55, 63, 64]\n            const isBlank = currentColorArrangement[i] === blank\n\n            if (notValid.includes(i)) continue\n\n            if (rowOfThree.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n                setScoreDisplay((score) => score + 3)\n                rowOfThree.forEach(square => currentColorArrangement[square] = blank)\n                return true\n            }\n        }\n    })"]